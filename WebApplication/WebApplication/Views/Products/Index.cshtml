@model PagedList.IPagedList<WebApplication.Models.Product>
@using PagedList.Mvc
@using WebApplication.Common

@section Styles{
    <link href="~/Contents/AdminPage/Products.css" rel="stylesheet" type="text/css" />
    <link href="~/Contents/AdminPage/PagedList.css" rel="stylesheet" type="text/css" />
}

@{
    Layout = Constants.PATH_ADMIN_LAYOUT;
    ViewBag.Title = "Sản phẩm";
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Sản Phẩm</h1>
    </div>
</div>

<div>
    @using (Html.BeginForm("Index", "Products", FormMethod.Get))
    {
        <p style="float:right;">
            @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" />
        </p>
    }
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                @Html.ActionLink("Thêm mới", "Create")
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                <div class="dataTable_wrapper">
                    <table class="table table-striped table-bordered table-hover" id="dataTables-example">
                        <thead>
                            <tr>
                                <th class="header-item">
                                    @Html.ActionLink("Tên Sản phẩm", "Index", new { sortOrder = ViewBag.NameSortParam, currentFilter = ViewBag.CurrentFilter })
                                </th>
                                <th class="header-item">@Html.DisplayNameFor(model => model.First().Image)</th>
                                <th class="header-item">@Html.DisplayNameFor(model => model.First().ManufacturerId)</th>
                                <th class="header-item">@Html.DisplayNameFor(model => model.First().Quantity)</th>
                                <th class="header-item">@Html.DisplayNameFor(model => model.First().Price)</th>
                                <th class="header-item">@Html.DisplayNameFor(model => model.First().TypeId)</th>
                                <th class="header-item">@Html.DisplayNameFor(model => model.First().Description)</th>
                                <th class="header-item">@Html.DisplayNameFor(model => model.First().CreatedDate)</th>
                                <th class="header-item">@Html.DisplayNameFor(model => model.First().ModifiedDate)</th>
                                <th class="header-item">@Html.DisplayNameFor(model => model.First().Deleted)</th>
                                <th />
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr class="gradeA">
                                    <td class="row-item">
                                        @Html.DisplayFor(modelItem => item.Name)
                                    </td>
                                    <td class="row-item">
                                        <img src="@Url.Content(@Constants.PATH_IMAGE+"/"+item.Image)" alt="@item.Name" class="image_column" />
                                    </td>
                                    <td class="row-item">
                                        @Html.DisplayFor(modelItem => item.Manufacturer.Name)
                                    </td>
                                    <td class="row-item">
                                        @Html.DisplayFor(modelItem => item.Quantity)
                                    </td>
                                    <td class="row-item">
                                        @Html.DisplayFor(modelItem => item.Price)
                                    </td>
                                    <td class="row-item">
                                        @Html.DisplayFor(modelItem => item.Type.Name)
                                    </td>
                                    <td>
                                        @Html.Raw(item.Description)
                                    </td>
                                    <td class="row-item">
                                        @Html.DisplayFor(modelItem => item.CreatedDate)
                                    </td>
                                    <td class="row-item">
                                        @Html.DisplayFor(modelItem => item.ModifiedDate)
                                    </td>
                                    <td class="row-item">
                                        @Html.DisplayFor(modelItem => item.Deleted)
                                    </td>
                                    @if (!item.Deleted)
                                    {
                                        <td class="row-item">
                                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="row-item">
                                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                            @Html.ActionLink("Details", "Details", new { id = item.Id })
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>

                    <div class="page_area" style="text-align:center;">
                        Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                        @Html.PagedListPager(Model, page => Url.Action("Index",
                   new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                    </div>

                </div>
            </div>
            <!-- /.panel-body -->
        </div>
        <!-- /.panel -->
    </div>
    <!-- /.col-lg-12 -->
</div>
